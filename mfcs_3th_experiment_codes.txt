1. y = x

import matplotlib.pyplot as plt
import numpy as np
# Define the function and create a graph
x = np.linspace(0, 10, 100)
y = x
plt.plot(x, y, label='y = x', color='red')
# Add labels, title, and grid
plt.xlabel("X-axis")
plt.ylabel("Y-axis")
plt.title("Graph of the Function y = x")
plt.grid(True)
plt.legend()
plt.show()


2. y = -x

import matplotlib.pyplot as plt
import numpy as np
# Define the function and create the graph
x = np.linspace(-10, 10, 100)
y = -x
plt.plot(x, y, label='y = -x', color='red')
# Add labels, title, and grid
plt.xlabel('X-axis')
plt.ylabel('Y-axis')
plt.title('Graph of the Function y = -x')
plt.grid(True)
plt.legend()
plt.show()


3. y = x^2

import matplotlib.pyplot as plt
import numpy as np
# Define the function and draw the graph
x = np.linspace(-10, 10, 100)
y = x * x
# Plot the graph
plt.plot(x, y, label='y = x^2', color='red')
# Add labels, title, and grid
plt.xlabel('X-axis')
plt.ylabel('Y-axis')
plt.title('Graph of the Function y = x²')
plt.grid(True)
plt.legend()
# Show the plot
plt.show()


4. y = x^3

import matplotlib.pyplot as plt
import numpy as np
# Define the function and draw the graph
x = np.linspace(-10, 10, 100)
y = x*x*x
plt.plot(x, y, label='y = x^3', color='red')
# Add labels, title, and grid
plt.xlabel('X-axis')
plt.ylabel('Y-axis')
plt.title('Graph of the Function y = x³')
plt.grid(True)
plt.legend()
# Show the plot
plt.show()


5. y = log(x)

import matplotlib.pyplot as plt
import numpy as np
# Define the function and create the graph
x = np.linspace(-10, 10, 100)  
y = np.log(x)  
plt.plot(x, y, label='y = log(x)', color="red")
# Add labels, title, and grid
plt.title('Graph of the Function y = log(x)')
plt.xlabel('X-axis')
plt.ylabel('Y-axis')
plt.grid(True)
plt.legend()
plt.show()

6. y = e^x

import matplotlib.pyplot as plt
import numpy as np
# Define the function and create the graph
x = np.linspace(0, 5, 100)         # Changed upper limit to 5 for better visualization
y = np.exp(x)                      # e^x
plt.plot(x, y, label='y = e^x', color='blue')
# Add labels, title, and grid
plt.xlabel("X-axis")
plt.ylabel("Y-axis")
plt.title("Graph of the Function y = e^x")
plt.grid(True)
plt.legend()
plt.show()


7. y = sin(x)

import matplotlib.pyplot as plt
import numpy as np
# Define the function and create the graph
x = np.linspace(0, 10, 100)
y = np.sin(x)
plt.plot(x, y, label='y = sin(x)', color='red')
# Add labels, title, and grid
plt.xlabel("X-axis")
plt.ylabel("Y-axis")
plt.title("Graph of the Function y = sin(x)")
plt.grid(True)
plt.legend()
plt.show()

8. y = cos(x)

import matplotlib.pyplot as plt
import numpy as np
# Define the function and create the graph
x = np.linspace(0, 10, 100)
y = np.cos(x)
plt.plot(x, y, label='y = cos(x)', color='red')
# Add labels, title, and grid
plt.xlabel('X-axis')
plt.ylabel('Y-axis')
plt.title('Graph of the Function y = cos(x)')
plt.grid(True)
plt.legend()
plt.show()

9. R = {(1,1), (1,2), (1,3), (2,1), (2,2,), (2,3), (3,1), (3,2), (3,3)}

import networkx as nx
import matplotlib.pyplot as plt
R = [(1, 1), (1, 2), (1, 3), 
     (2, 1), (2, 2), (2, 3), 
     (3, 1), (3, 2), (3, 3)]
G = nx.DiGraph()
G.add_edges_from(R)
nx.draw(G, with_labels=True, arrows=True)
plt.show() 
