1.

from sympy import symbols, simplify
x = symbols('x')
G_x = 3 / (1 - x) + x / (1 - x)**2
G_x_simplified = simplify(G_x)
print("Closed-form generating function G(x) for a_n = 3 + n is:")
print(G_x_simplified)

2.

from sympy import symbols, simplify
x = symbols('x')
G_x = (x * (1 + x)) / ((1 - x)**3)
G_x_simplified = simplify(G_x)
print("Closed-form generating function G(x) for a_n = n^2 is:")
print(G_x_simplified)

3.

from sympy import symbols, simplify, init_printing
init_printing()
x = symbols('x')
Gx = 2 / (1 - x) + 3 * x / (1 - x)**2
Gx_simplified = simplify(Gx)
print("Closed-form generating function G(x) for a_n = 2 + 3n is:")
print(Gx_simplified)

4.

def a(n):
    if n == 0:
        return 1  
    else:
        return 2 * a(n - 1) + 3
for i in range(10):
    print(f"a({i}) = {a(i)}")
